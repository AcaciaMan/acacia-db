{
  "name": "acacia-db",
  "displayName": "Acacia DB",
  "description": "Analyzes database table and column usage across your source code. Find relationships, generate documentation, and optimize database access patterns. Perfect for legacy system analysis, migration planning, and performance optimization.",
  "version": "0.0.1",
  "license": "MIT",
  "publisher": "manacacia",
  "icon": "icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/AcaciaMan/acacia-db"
  },
  "engines": {
    "vscode": "^1.105.0"
  },
  "categories": [
    "Linters",
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "database",
    "sql",
    "analysis",
    "migration",
    "documentation",
    "legacy",
    "optimization"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "acacia-db",
          "title": "Acacia DB",
          "icon": "resources/database-icon.svg"
        }
      ]
    },
    "views": {
      "acacia-db": [
        {
          "id": "acaciaDbConfiguration",
          "name": "Configuration",
          "icon": "resources/database-icon.svg",
          "contextualTitle": "Acacia DB Configuration"
        },
        {
          "id": "acaciaDbExplorer",
          "name": "Database Explorer",
          "icon": "resources/database-icon.svg",
          "contextualTitle": "Acacia DB"
        },
        {
          "id": "acaciaDbColumnExplorer",
          "name": "Column Explorer",
          "icon": "resources/database-icon.svg",
          "contextualTitle": "Column Relationships"
        }
      ]
    },
    "commands": [
      {
        "command": "acacia-db.analyzeWorkspace",
        "title": "Analyze Workspace",
        "icon": "$(refresh)"
      },
      {
        "command": "acacia-db.filterTables",
        "title": "Filter Tables",
        "icon": "$(search)"
      },
      {
        "command": "acacia-db.clearFilter",
        "title": "Clear Filter",
        "icon": "$(clear-all)"
      },
      {
        "command": "acacia-db.findTableReferences",
        "title": "Find Table References",
        "icon": "$(search)"
      },
      {
        "command": "acacia-db.generateDocumentation",
        "title": "Generate Documentation",
        "icon": "$(book)"
      },
      {
        "command": "acacia-db.showDatabaseReport",
        "title": "Show Database Usage Report",
        "icon": "$(graph)"
      },
      {
        "command": "acacia-db.refreshExplorer",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "acacia-db.openReference",
        "title": "Open Reference"
      },
      {
        "command": "acacia-db.copyTableName",
        "title": "Copy Table Name",
        "icon": "$(copy)"
      },
      {
        "command": "acacia-db.selectTablesFile",
        "title": "Select Tables/Views JSON File",
        "icon": "$(file)"
      },
      {
        "command": "acacia-db.selectSourceFolder",
        "title": "Select Source Code Folder",
        "icon": "$(folder)"
      },
      {
        "command": "acacia-db.clearTablesFile",
        "title": "Clear Tables File",
        "icon": "$(close)"
      },
      {
        "command": "acacia-db.clearSourceFolder",
        "title": "Clear Source Folder",
        "icon": "$(close)"
      },
      {
        "command": "acacia-db.analyzeColumnRelationships",
        "title": "Analyze Column Relationships",
        "icon": "$(graph)"
      },
      {
        "command": "acacia-db.refreshColumnExplorer",
        "title": "Refresh Column Explorer",
        "icon": "$(refresh)"
      },
      {
        "command": "acacia-db.filterColumnExplorer",
        "title": "Filter Tables",
        "icon": "$(search)"
      },
      {
        "command": "acacia-db.clearColumnExplorerFilter",
        "title": "Clear Filter",
        "icon": "$(clear-all)"
      },
      {
        "command": "acacia-db.openColumnReference",
        "title": "Open Column Reference"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "acacia-db.analyzeWorkspace",
          "when": "view == acaciaDbExplorer",
          "group": "navigation"
        },
        {
          "command": "acacia-db.filterTables",
          "when": "view == acaciaDbExplorer",
          "group": "navigation"
        },
        {
          "command": "acacia-db.clearFilter",
          "when": "view == acaciaDbExplorer",
          "group": "navigation"
        },
        {
          "command": "acacia-db.refreshExplorer",
          "when": "view == acaciaDbExplorer",
          "group": "navigation"
        },
        {
          "command": "acacia-db.generateDocumentation",
          "when": "view == acaciaDbExplorer"
        },
        {
          "command": "acacia-db.showDatabaseReport",
          "when": "view == acaciaDbExplorer"
        },
        {
          "command": "acacia-db.analyzeColumnRelationships",
          "when": "view == acaciaDbColumnExplorer",
          "group": "navigation"
        },
        {
          "command": "acacia-db.refreshColumnExplorer",
          "when": "view == acaciaDbColumnExplorer",
          "group": "navigation"
        },
        {
          "command": "acacia-db.filterColumnExplorer",
          "when": "view == acaciaDbColumnExplorer",
          "group": "navigation"
        },
        {
          "command": "acacia-db.clearColumnExplorerFilter",
          "when": "view == acaciaDbColumnExplorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "acacia-db.copyTableName",
          "when": "view == acaciaDbExplorer && viewItem == table",
          "group": "inline"
        },
        {
          "command": "acacia-db.findTableReferences",
          "when": "view == acaciaDbExplorer && viewItem == table"
        },
        {
          "command": "acacia-db.clearTablesFile",
          "when": "view == acaciaDbConfiguration && viewItem == configItem"
        },
        {
          "command": "acacia-db.clearSourceFolder",
          "when": "view == acaciaDbConfiguration && viewItem == configItem"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "acaciaDbColumnExplorer",
        "contents": "No column relationships found.\n\nTo analyze column relationships:\n1. Configure tables_views.json with column definitions\n2. Run 'Analyze Workspace' in Database Explorer\n3. Click 'Analyze Column Relationships' button\n\n[Analyze Workspace](command:acacia-db.analyzeWorkspace)\n[Configure Settings](command:workbench.action.openSettings?%22acaciaDb%22)"
      }
    ],
    "keybindings": [
      {
        "command": "acacia-db.filterTables",
        "key": "ctrl+f",
        "mac": "cmd+f",
        "when": "focusedView == acaciaDbExplorer"
      },
      {
        "command": "acacia-db.clearFilter",
        "key": "escape",
        "when": "focusedView == acaciaDbExplorer"
      }
    ],
    "configuration": {
      "title": "Acacia DB",
      "properties": {
        "acaciaDb.scanPatterns": {
          "type": "array",
          "default": [
            "**/*.sql",
            "**/*.js",
            "**/*.ts",
            "**/*.java",
            "**/*.cs",
            "**/*.py",
            "**/*.php",
            "**/*.rb"
          ],
          "description": "File patterns to scan for database references"
        },
        "acaciaDb.excludePatterns": {
          "type": "array",
          "default": [
            "**/node_modules/**",
            "**/dist/**",
            "**/build/**",
            "**/.git/**"
          ],
          "description": "Patterns to exclude from scanning"
        },
        "acaciaDb.tablePatterns": {
          "type": "array",
          "default": [
            "FROM\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
            "JOIN\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
            "INTO\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
            "UPDATE\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
          ],
          "description": "Regular expression patterns to detect table names"
        },
        "acaciaDb.tablesViewsFile": {
          "type": "string",
          "default": "",
          "description": "Path to tables_views.json file containing database schema definitions"
        },
        "acaciaDb.sourceFolder": {
          "type": "string",
          "default": "",
          "description": "Source code folder to analyze for database references"
        },
        "acaciaDb.enableRelationshipDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable detection of table relationships (may be resource intensive for large codebases)"
        },
        "acaciaDb.proximityThreshold": {
          "type": "number",
          "default": 50,
          "minimum": 1,
          "maximum": 500,
          "description": "Number of lines within which tables are considered related"
        },
        "acaciaDb.filterToRelationshipsOnly": {
          "type": "boolean",
          "default": true,
          "description": "Save only references that are part of table relationships (within proximity threshold of another table). Dramatically reduces file size."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.105.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@typescript-eslint/eslint-plugin": "^8.45.0",
    "@typescript-eslint/parser": "^8.45.0",
    "eslint": "^9.36.0",
    "esbuild": "^0.25.10",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.9.3",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2"
  }
}
